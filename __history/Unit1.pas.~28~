unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, IdUDPClient,
  IdBaseComponent, IdComponent, IdUDPBase, IdUDPServer, Vcl.StdCtrls, IdGlobal,
  IdSocketHandle;

type
  TForm1 = class(TForm)
    Timer1: TTimer;
    IdUDPServer1: TIdUDPServer;
    IdUDPClient1: TIdUDPClient;
    Button1: TButton;
    Memo1: TMemo;
    Edit1: TEdit;
    procedure Timer1Timer(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure IdUDPServer1UDPRead(AThread: TIdUDPListenerThread;
      const AData: TIdBytes; ABinding: TIdSocketHandle);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
begin
  self.Timer1.Enabled := True;
  button1.Enabled:=false;
end;

procedure TForm1.IdUDPServer1UDPRead(AThread: TIdUDPListenerThread;
  const AData: TIdBytes; ABinding: TIdSocketHandle);
begin
  self.Memo1.Lines.Add(Bytestostring(AData));
  self.Caption := inttostr(ABinding.PeerPort);
end;

procedure TForm1.Timer1Timer(Sender: TObject);
begin
  self.IdUDPServer1.Active := False;
  self.IdUDPClient1.Host:= edit1.Text;
  self.IdUDPClient1.Active:=true;
  self.IdUDPClient1.Send('HELLOOOOOOOO!'); // holepunches the router ....
  self.IdUDPClient1.Active := False;
  self.IdUDPServer1.Active := True;
end;

end.
